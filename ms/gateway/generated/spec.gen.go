// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

